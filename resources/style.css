/* Breakdown the website */
/* UNIVERSAL STYLING */

body {
  font-family: Helvetica;
  font-size: 22px;
  color:seashell;
  background-color: black;
  opacity:0.9;
  text-align:center;
}

a{
  text-decoration: underline;
  color: seashell;
}
/* Add color and underline to each link*/

/* HEADER STYLING */

header{
  position: fixed;
  z-index:1;
  height:69px;
  width:100%;
  border-bottom: 1px solid seashell;
  display:flex;
  justify-content: space-between;
  align-items: center;
  background-color: black;
}
/* Header will be have fixed position.
Header will be a flex container with flex items
vertically aligned to the center. Flex items will
also be aligned horizontally with only space between.  */

.logo img{
  height:50px;
  padding-left:10px;
}
/*Align the image accordingly*/

header nav{
  padding-right:40px;
}
/*We add some padding space for the Nav Section*/
nav span{
  display:inline-block;
  padding: 10px 20px;
}
/*Each span will be displayed as an inline-blocck
 and will have padding accordingly Top/Bottom:10px and Left/Rignt:20px*/


/* CONTENT STYLING */

.main-image{
  height: 700px;
  width: 1200px;
  margin: 0 auto;
  display:flex;
  align-items: center;
  justify-content: center;
  position:relative;
  top:70px;
}
/* use margin with 0 and auto to perfectly center an image.
Next make it a flex container and align the flex items vertically centered.
Next make the flex items align center horizontally by justify-content.
We also use position:relative and set top to 70px; such that the picture does
not touch the header of the page.  */
.main-image .img-content {
  background-color: black;
  opacity:0.9;
  width:1200px;
}
/* In this section we added some styling to the content inside the image*/

/* Section of Images*/

.gallery{
  display:flex;
  flex-wrap:wrap;
  justify-content: center;
  align-items:center;
  width:1000px;
  margin: 0 auto;
}
/* Here we make the galley class a flex continer. Here we wrap the picture flex items in the gallery container.
We center the content and vertically align the content making no space between each element. next we
give a width of 1000px and perfectly center the gallery with margin.*/

.gallery .picture {
  margin: 0 30px 0 0;
}
/*Because we have no space between each class picture, we add the margin to give it a margin-right border equal to 30px;
This will allow equal spacing of 30px between each picture.*/
.gallery .picture img{
  width:300px;
  height:200px;
}
.gallery .picture h4{
  margin-top:10px;
}
/*We added the requested properties to img and h4 who are nested in the classes
gallery and picture. Class picture are the flex items of class gallery. */

/*LOCATION STYLING */

.locations{
  display:flex;
  height:500px;
  margin: 0 auto;
  align-items: center;
  justify-content: flex-start;
  flex-direction:column;
  width:1200px;
}
/* Here we set the locations class as a flex container and use the column direction
to set the title and the blocks class. The blocks class will also be a flex container
with flex items of adress blocks.*/

.blocks{
  display:flex;
  justify-content: center;
  align-items:center;
}
/* here we set the blocks class a flex container with the flex items being at the center.*/

.blocks .address-block{
  opacity:1;
  background-color:black;
  width:300px;
  margin: 15px 40px 0 0;
}
/* styling of each address block*/

/* FOOTER STYLING */


footer .info{
  height:200px;
  width:100%;
  text-align:center;
}
/*Divided the footer into two div sections */
footer .copyright h5{
  padding-left:20px;
  text-align:left;
  width:100%;
}
